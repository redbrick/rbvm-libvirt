#!/usr/bin/python2.6

from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
import os
import grp
import pwd
import smtplib
import string
import random
import sys
import traceback
from optparse import OptionParser

import rbvm.config as config
from rbvm.commandline import *

def main():    
    usage = "usage: %prog command [options]"
    parser = OptionParser(usage=usage)
    
    parser.add_option('-v','--verbose',action='store_true',default=False,help='make lots of noise')
    parser.add_option('-f','--force',action='store_true',default=False,help='force action (works with some commands)')
    
    options, args = parser.parse_args()
    if len(args) < 1:
        parser.error("a command must be specified. Run rbvmctl help for more information.")
    
    if options.verbose:    
        print "Connecting to database..."
    
    engine = create_engine(config.DATABASE_URI)
    Session = sessionmaker()
    Session.configure(bind=engine)
    session = Session()
    
    if options.verbose:
        print "Done"
    
    try:
        Clazz = commands[args[0]]
    except KeyError:
        parser.error("an invalid command was specified")
    
    try:
        cli_obj = Clazz(session, args[1:], options.force)
        cli_obj.run()
    except Exception, e:
        exc_type, exc_value, exc_traceback = sys.exc_info()
        if options.verbose:
            print "An error occurred. You specified verbose mode, so here's the traceback:"
            traceback.print_tb(exc_traceback)
            print
            print "And the exception itself:"
            print "%s: %s" % (repr(exc_type), repr(exc_value))
        else:
            print "An error occurred. Use verbose mode (-v) to print a traceback next time."
        sys.exit(1)

if __name__ == '__main__':
    # Don't run as anyone but SYSTEM_USER:SYSTEM_GROUP!
    correct_gid = grp.getgrnam(config.SYSTEM_GROUP)[2]
    if os.getgid() != correct_gid:
        os.setgroups([correct_gid])
        os.setregid(correct_gid,correct_gid)

    correct_uid = pwd.getpwnam(config.SYSTEM_USERNAME)[2]
    if os.getuid() != correct_uid:
        os.setreuid(correct_uid,correct_uid)
    main()
